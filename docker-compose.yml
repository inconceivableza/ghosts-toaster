name: ghosts-toaster

networks:
  ghost_network:
    driver: bridge
  webhook_network:
    internal: true  # Only accessible by containers, not externally

services:
  # Caddy web server
  caddy:
    image: caddy:2-alpine
    container_name: caddy
    restart: unless-stopped
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy-sites:/etc/caddy/caddy-sites:ro
      - ./static:/var/www/static:ro
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - "80:80"
      - "443:443"
    networks:
      - ghost_network
    env_file:
      - ./.env
    labels:
      group: universal

  # Shared MySQL database for all Ghost instances
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - ghost_network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--password=${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 3
    labels:
      group: universal

  # Redis cache (optional, for performance)
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    networks:
      - ghost_network
    volumes:
      - redis_data:/data
    labels:
      group: universal
      
  # Static site generator service with Git support
  static-generator:
    build:
      dockerfile: Dockerfile-static-generator
    container_name: static-generator
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./static:/static:rw
      - ./scripts:/scripts
      - ./ssh:/root/.ssh:rw
    networks:
      - ghost_network
      - webhook_network
    command: >
      sh -c '
        echo "Static site generator container started" && 
        # Set git configuration
        git config --global user.email "${GIT_COMMITTER_EMAIL:-static-generator@ghosts-toaster.local}" &&
        git config --global user.name "${GIT_COMMITTER_NAME:-Ghosts Toaster}" &&
        git config --global init.defaultBranch main &&
        # Keep container running
        tail -f /dev/null
      '
    labels:
      group: universal
      # The image for this isn't yet published on docker hub, so don't try and update it
      com.centurylinklabs.watchtower.enable: false
    
  # Webhook receiver for triggering static site generations
  webhook-receiver:
    image: node:18-alpine
    container_name: webhook-receiver
    restart: unless-stopped
    volumes:
      - ./webhook:/app
      - ./scripts:/scripts
      - ./sites:/sites:ro
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /app
    networks:
      ghost_network:
        aliases:
          - webhook-receiver.docker.internal
      webhook_network: {}
    depends_on:
      - static-generator
    command: sh -c "apk add --no-cache docker-cli bash && npm install && node webhook-server.js"
    environment:
      - PORT=9000
    env_file:
      - ./.env
    labels:
      group: universal

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_CLEANUP: "true"
      TZ: "UTC"
    restart: unless-stopped
    env_file:
      - ./.env
    labels:
      group: universal

volumes:
  caddy_data:
  caddy_config:
  mysql_data:
  redis_data:

# Include all site-specific compose files
# Each file should be named after the site's hostname
include:
  - include-sites.yml
